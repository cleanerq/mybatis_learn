<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace  名称空间 写接口的全类名，相当于告诉mybatis这个配置文件是实现哪个接口-->
<mapper namespace="dao.EmployeeDao">
<!--    参数类型不用写-->
<!--    databaseId="" 匹配数据库名字-->
    <select id="getEmpById" resultType="bean.Employee" >
        select * from t_employee where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="getEmpByIdAndEmpName" resultType="bean.Employee" >
        select * from t_employee where id = #{id} and empName = #{empName}
    </select>

<!--    增删改不用写返回值类型，增删改是影响多少行 mybatis自动判断，如果是数字 int long-->
    <update id="updateEmployee">
        UPDATE t_employee t
        SET t.empname = #{empName},
         gender = #{gender},
         email = #{email}
        WHERE
            t.id = #{id}
    </update>

    <delete id="deleteEmployee">
        delete from t_employee where id = #{id}
    </delete>

    <insert id="insertEmployee" parameterType="bean.Employee"
            useGeneratedKeys="true" keyProperty="id">
        insert into t_employee(empname, gender, email)
        values(#{empName}, #{gender},#{email})
    </insert>

    <insert id="insertEmployeeFull" parameterType="bean.Employee" >
        <selectKey order="BEFORE" resultType="int" keyProperty="id">
            select max(id) + 1 from t_employee
        </selectKey>
        insert into t_employee(id, empname, gender, email)
        values(#{id}, #{empName}, #{gender},#{email})
    </insert>

    <select id="getEmpByIdAndEmpNameMap" resultType="bean.Employee" >
        select * from ${tableName} where id = ${id} and empName = #{empName}
    </select>

    <!--
    这个文件中能写的所有标签
    cache：和缓存有关
    cache-ref：和缓存有关
    delete,update,insert,select：增删改查
        databaseId：指定CRUD属于哪个数据库
    parameterMap：参数map 废弃的 原本是来做复杂参数映射
    resultMap：结果映射，自定义结果集的封装规则
    sql：抽取可重用Sql
    -->

    <select id="getEmps" resultType="bean.Employee" >
        select * from t_employee
    </select>

    <select id="getEmpByIdReturnMap" resultType="map" >
        select * from t_employee where id = #{id, jdbcType=INTEGER}
    </select>

</mapper>